// 1) створити функцію яка приймає масив та виводить його
//  arrayfunc() {
//
// let newarray = [1,'s', 'dffq'];
//     console.log(newarray);
//
// }
//
// arrayfunc();
// 2) створити функцію яка заповнює масив рандомними числами та виводить його. Для виведення використати попередню функцію.
// function arrayfunc() {
//
// let newarray = [];
// for (let i = 0; i < 10; i++) {
//
//   newarray.push(i);
//     }
//     console.log(newarray);
//
// }
//
// arrayfunc();
// 3) створити функцію яка приймає три числа та виводить найменьше. (Без Math.min!)
// function minback(a,b,c) {
//     if (a > c && b > c) min = c;
//     if (a > b && c > b) min = b;
//     if (c > a && b > a) min = a;
//
// console.log('min: ',min);
//
//
// }
//
// minback(54,0,8)

// 4) створити функцію яка приймає три числа та виводить найбільше. (Без Math.max!)
// function maxnumber(a,b,c) {
//     if (a > c && a > b)  max = a;
//     if (b > a && b > c)  max = b;
//     if (c > b && c > a)  max = c;
// console.log('max: ',max)
// }
// maxnumber(3.14,1,2.1)

// // 5) створити функцію яка повертає найбільше число з масиву
// const maxarr = (array) => {
// let max = array[0];
//
//    for (const arrayElement of array) {
//     if (arrayElement > max) max = arrayElement;
//  }
//  return max;
//
// }
// const myFunk =maxarr([5,58,96,8,55,62])
//  console.log(myFunk);
// -------------------------------------------------
// -------------------------------------------------
// 6) створити функцію яка повертає найменьше число з масиву
//     let minArray = (array) => {
//     let min = array[0];
//         for (const minElement of array) {
//             if (minElement < min) min = minElement;
//         }return min;
//     }
//     const MyMinFunk = minArray([55,58,96,8,55,62]);
//     console.log(MyMinFunk);
// // 7) створити функцію яка приймає масив чисел, сумує значення елементів масиву та повертає його.
//     let sumElemArray = (array) => {
//     let sum = 0;
//         for (const Element of array) {
//             sum += Element;
//         }return sum;
//     }
//     let calcultarr = sumElemArray([55,58,96,8,55,62,-330]);
//     console.log(calcultarr)
//

// // 8) створити функцію яка приймає масив чисел та повертає середнє арифметичне його значень.
//
// let serarray = (array) => {
//     let sum = 0;
//     for (const arrayElement of array) {
//         sum += arrayElement;
//     }return sum / array.length
//
// }
// let newserarray = serarray([1,5,6,10,15])
// console.log(newserarray);
// 9) Створити функцію яка приймає масив будь яких объектів, та повертає масив ключів всіх обєктів
// EXAMPLE:
//     [{name: 'Dima', age: 13}, {model: 'Camry'}]  ===> [ name, age, model ]
// -----------------------------так для прикладу собі----------------------------------------------
//   let aray = [{name: 'Dima', age: 13}, {model: 'Camry'}]
// for (const arayKey of aray) {
//     for (const arayKeyKey in arayKey) {
//         console.log(arayKeyKey)
//     }
// }

// ------------------------------------------------------------------------------
let objectin = (array) => {
    for (const arayKey of array) {
     for (const arayKeyKey in arayKey) {
        console.log(arayKeyKey)
        }
    }return
}
const newarray = objectin([{name: 'Dima', age: 13}, {model: 'Camry'}])
console.log(newarray)

// 10) Створити функцію яка приймає масив будь яких объектів, та повертає масив значень всіх обєктів
// EXAMPLE:
//     [{name: 'Dima', age: 13}, {model: 'Camry'}]  ===> [ Dima, 13, Camry ]
// 11) створити функцію  яка скаладає значення елементів з однаковими індексами  та повертає новий результуючий масив.
//     EXAMPLE:
// [1,2,3,4]
//     [2,3,4,5]
// результат
//     [3,5,7,9]
//
//
// ============================================================================================
//
// - створити функцію яка приймає будь-яку кількість чисел, повертає найменьше, а виводить найбільше (Math використовувати заборонено);
// - Взяти задачі з завдання 10 та 9 та обєднати їх в одну динамічну функцію.
//     Що б я міг сам вибрати повернути мені масив ключів чи масив значень.
// - Приймає масив та число "i", та міняє місцями об`єкт який знаходиться в індексі "i" на "i+1"
//
// - Сворити функцію яка буде переносити елементи з значенням 0 у кінець маисву. Зберігаючи при цьому порядок не нульових значень.
// Двожина масиву від 2 до 100
// Приклад
// [1,0,6,0,3] => [1,6,3,0,0]
// [0,1,2,3,4] => [1,2,3,4,0]
// [0,0,1,0]   => [1,0,0,0]
//
// - Дано список імен.
// let n1 = '    Harry       Potter      '
// let n2 = '    Ron       Whisley      '
// let n3 = '    Hermione       Granger      '
// Написати функцію, яка приймає будь яке не валідне імя, та нормалізує його в наступнйи вигляд
// let n1 = 'Harry Potter'
// let n2 = 'Ron Whisley'
// let n3 = 'Hermione Granger'
//
// ============================================================================================
//
//
//
// // ******************* НАЗАД В МИНУЛЕ *********************** //
// Створити функцію яка :
// - Додає в боді блок з текстом "Hello owu"
// - Додає в боді елемент з текстом . Тип елементу та текст отримати через аргументи
// - приймає масив автомобілів (можна взяти з попередніх дз ),та  індентифікатор елемнту в який потрібно додати список цих автомобілів.
// Для кожного автомобіля створити свій блок, та додати його в елемент, індентифікатор якого ви отримали. Всі властивості авто в обному блоці
// - приймає масив автомобілів (можна взяти з попередніх дз ),та  індентифікатор елемнту в який потрібно додати список цих автомобілів.
// Для кожного автомобіля створити свій блок, та додати його в елемент, індентифікатор якого ви отримали.
// Для кожної властивості створити всередені блока автомоблія свій блок
// // ******************* НАЗАД В МИНУЛЕ *********************** //
//
//
//
// ============================================================================================
//                              ЗАДАЧІ ПІДВИЩЕНОГО РІВНЯ СКЛАДНОСТІ
// ============================================================================================
//
// 1) Точная степень двойки.
// Дано натуральное число N.
// Выведите слово YES, если число N является точной степенью двойки,
// или слово NO в противном случае.
// Операцией возведения в степень пользоваться нельзя!
//
// 2) Deep Copy
// реалізувати глибоке копіювання обєкту за допомогою рекурсій
//
// 3) Flat
// Вирівняти багаторівневий масив в однорівневий
// [1,3, ['Hello, 'Wordd', [9,6,1]], ['oops'], 9] -> [1, 3, 'Hello, 'Wordd', 9, 6, 1, 'oops', 9]